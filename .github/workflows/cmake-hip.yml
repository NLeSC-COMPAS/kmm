# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: HIP build

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest]
        build_type: [Debug]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install python3-setuptools python3-wheel
          wget https://repo.radeon.com/amdgpu-install/6.3.3/ubuntu/noble/amdgpu-install_6.3.60303-1_all.deb
          sudo apt install ./amdgpu-install_6.3.60303-1_all.deb
          rm ./amdgpu-install_6.3.60303-1_all.deb
          sudo apt update
          sudo apt install hip-dev

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_PREFIX_PATH=/opt/rocm
          -DCMAKE_CXX_COMPILER:PATH=/opt/rocm/bin/amdclang++
          -DHIPCXX:PATH=/opt/rocm/bin/amdclang++
          -DCMAKE_HIP_COMPILER_ROCM_ROOT:PATH=/opt/rocm
          -DCMAKE_HIP_ARCHITECTURES=gfx90a
          -DCMAKE_HIP_COMPILER:PATH=/opt/rocm/bin/amdclang++
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
          -DSPDLOG_FMT_EXTERNAL:BOOL=ON
          -DKMM_USE_HIP:BOOL=ON
          -DKMM_BUILD_TESTS:BOOL=ON
          -S ${{ github.workspace }}

      - name: Build
        # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
